// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poliza.Entities;

#nullable disable

namespace Poliza.Migrations
{
    [DbContext(typeof(PolizaDbContext))]
    [Migration("20250515034852_202505132130")]
    partial class _202505132130
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Common.Entities.PolizaCoberturaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(1)
                        .HasComment("Identificador del tipo de póliza");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR")
                        .HasColumnOrder(2)
                        .HasComment("Descripción de la cobertura");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("BIT")
                        .HasColumnOrder(3)
                        .HasComment("Indicador de borrado lógico");

                    b.HasKey("Id")
                        .HasName("PK_PolizaCobertura_Id");

                    b.HasIndex(new[] { "Descripcion", "EstaEliminado" }, "TipoPolizaBusquedaIndex")
                        .IsUnique()
                        .HasFilter("[Descripcion] IS NOT NULL");

                    b.HasIndex(new[] { "Id" }, "TipoPolizaIndex")
                        .IsUnique();

                    b.ToTable("PolizaCoberturaTable", "PolizaSchema");
                });

            modelBuilder.Entity("Common.Entities.PolizaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(1)
                        .HasComment("Identificador de la póliza");

                    b.Property<string>("Aseguradora")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnOrder(13)
                        .HasComment("Nombre de la aseguradora");

                    b.Property<string>("CedulaAsegurado")
                        .HasColumnType("VARCHAR")
                        .HasColumnOrder(4)
                        .HasComment("Cédula del asegurado");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("BIT")
                        .HasColumnOrder(15)
                        .HasComment("Indicador de borrado lógico");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(7)
                        .HasComment("Fecha de emisión de la póliza");

                    b.Property<DateTime>("FechaInclusion")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(12)
                        .HasComment("Fecha de inclusión de la póliza");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(6)
                        .HasComment("Fecha de vencimiento de la póliza");

                    b.Property<Guid>("IdCobertura")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(8)
                        .HasComment("Coberturas de la póliza");

                    b.Property<Guid>("IdPeriodo")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(14)
                        .HasComment("Periodo de la póliza");

                    b.Property<Guid>("IdPolizaEstado")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(9)
                        .HasComment("Identificador del estado de la póliza");

                    b.Property<Guid>("IdTipoPoliza")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(3)
                        .HasComment("Identificador del tipo de póliza");

                    b.Property<decimal>("MontoAsegurado")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnOrder(5)
                        .HasComment("Monto asegurado");

                    b.Property<string>("NumeroPoliza")
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR")
                        .HasColumnOrder(2)
                        .HasComment("Número de póliza");

                    b.Property<DateTime>("Periodo")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(11)
                        .HasComment("Periodo de cobertura de la póliza");

                    b.Property<decimal>("Prima")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnOrder(10)
                        .HasComment("Prima de la póliza");

                    b.HasKey("Id")
                        .HasName("PK_Poliza_Id");

                    b.HasIndex("IdCobertura");

                    b.HasIndex("IdPeriodo");

                    b.HasIndex("IdPolizaEstado");

                    b.HasIndex(new[] { "CedulaAsegurado" }, "PolizaCedulaAseguradoIndex");

                    b.HasIndex(new[] { "FechaVencimiento" }, "PolizaFechaVencimientoIndex");

                    b.HasIndex(new[] { "IdTipoPoliza" }, "PolizaIdTipoPolizaIndex");

                    b.HasIndex(new[] { "NumeroPoliza" }, "PolizaNumeroPolizaIndex");

                    b.ToTable("PolizaTable", "PolizaSchema");
                });

            modelBuilder.Entity("Common.Entities.PolizaEstadoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(1)
                        .HasComment("Identificador del estado de la póliza");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR")
                        .HasColumnOrder(2)
                        .HasComment("Descripción del estado de la póliza");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("BIT")
                        .HasColumnOrder(3)
                        .HasComment("Indicador de borrado lógico");

                    b.HasKey("Id")
                        .HasName("PK_PolizaEstado_Id");

                    b.HasIndex(new[] { "Descripcion", "EstaEliminado" }, "PolizaEstadoBusquedaIndex")
                        .IsUnique()
                        .HasFilter("[Descripcion] IS NOT NULL");

                    b.HasIndex(new[] { "Id" }, "PolizaEstadoIndex")
                        .IsUnique();

                    b.ToTable("PolizaEstadoTable", "PolizaSchema");
                });

            modelBuilder.Entity("Common.Entities.PolizaPeriodoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(1)
                        .HasComment("Identificador del periodo de póliza");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR")
                        .HasColumnOrder(2)
                        .HasComment("Descripción del periodo de póliza");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("BIT")
                        .HasColumnOrder(3)
                        .HasComment("Indicador de borrado lógico");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Descripcion", "EstaEliminado" }, "PolizaPeriodoBusquedaIndex")
                        .IsUnique()
                        .HasFilter("[Descripcion] IS NOT NULL");

                    b.HasIndex(new[] { "Id" }, "PolizaPeriodoIndex")
                        .IsUnique();

                    b.ToTable("PolizaPeriodo", "PolizaSchema");
                });

            modelBuilder.Entity("Common.Entities.TipoPolizaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(1)
                        .HasComment("Identificador del tipo de póliza");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(512)
                        .HasColumnType("VARCHAR")
                        .HasColumnOrder(2)
                        .HasComment("Descripción del tipo de póliza");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("BIT")
                        .HasColumnOrder(3)
                        .HasComment("Indicador de borrado lógico");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Descripcion", "EstaEliminado" }, "TipoPolizaBusquedaIndex")
                        .IsUnique()
                        .HasFilter("[Descripcion] IS NOT NULL");

                    b.HasIndex(new[] { "Id" }, "TipoPolizaIndex")
                        .IsUnique();

                    b.ToTable("TipoPoliza", "PolizaSchema");
                });

            modelBuilder.Entity("Common.Entities.PolizaEntity", b =>
                {
                    b.HasOne("Common.Entities.PolizaCoberturaEntity", "PolizaCobertura")
                        .WithMany("Polizas")
                        .HasForeignKey("IdCobertura")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Poliza_PolizaCobertura");

                    b.HasOne("Common.Entities.PolizaPeriodoEntity", "PolizaPeriodo")
                        .WithMany("Polizas")
                        .HasForeignKey("IdPeriodo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Entities.PolizaEstadoEntity", "PolizaEstado")
                        .WithMany("Polizas")
                        .HasForeignKey("IdPolizaEstado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Poliza_PolizaEstado");

                    b.HasOne("Common.Entities.TipoPolizaEntity", "TipoPoliza")
                        .WithMany("Polizas")
                        .HasForeignKey("IdTipoPoliza")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Poliza_TipoPoliza");

                    b.Navigation("PolizaCobertura");

                    b.Navigation("PolizaEstado");

                    b.Navigation("PolizaPeriodo");

                    b.Navigation("TipoPoliza");
                });

            modelBuilder.Entity("Common.Entities.PolizaCoberturaEntity", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("Common.Entities.PolizaEstadoEntity", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("Common.Entities.PolizaPeriodoEntity", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("Common.Entities.TipoPolizaEntity", b =>
                {
                    b.Navigation("Polizas");
                });
#pragma warning restore 612, 618
        }
    }
}
